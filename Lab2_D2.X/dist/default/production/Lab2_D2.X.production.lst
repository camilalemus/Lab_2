

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 02:17:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  0006                     _PORTBbits	set	6
   286  000C                     _PIR1bits	set	12
   287  0001                     _TMR0	set	1
   288  000B                     _INTCONbits	set	11
   289  0009                     _PORTEbits	set	9
   290  0008                     _PORTD	set	8
   291  001F                     _ADCON0bits	set	31
   292  0007                     _PORTC	set	7
   293  009F                     _ADCON1bits	set	159
   294  008C                     _PIE1bits	set	140
   295  0096                     _IOCBbits	set	150
   296  0086                     _TRISBbits	set	134
   297  0086                     _TRISB	set	134
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0085                     _TRISAbits	set	133
   301  0085                     _TRISA	set	133
   302  0188                     _ANSELbits	set	392
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   314  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0011                     __end_of__initialization:
   319  0011  0183               	clrf	3
   320  0012  120A  118A  291C   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0079                     __pbssCOMMON:
   324  0079                     _ADC_analogvalue:
   325  0079                     	ds	1
   326  007A                     _ADC_cflag:
   327  007A                     	ds	1
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_setup:
   332  0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	3
   344  0073                     ??_setup:
   345  0073                     ?_ADC_init:	
   346                           ; 1 bytes @ 0x3
   347                           
   348  0073                     ADC_init@Channel:	
   349                           ; 1 bytes @ 0x3
   350                           
   351                           
   352                           ; 1 bytes @ 0x3
   353  0073                     	ds	1
   354  0074                     ADC_init@Justified:
   355                           
   356                           ; 1 bytes @ 0x4
   357  0074                     	ds	1
   358  0075                     ADC_init@Vref:
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	1
   362  0076                     ??_ADC_init:
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	2
   366  0078                     ADC_init@ADCSbit:
   367                           
   368                           ; 1 bytes @ 0x8
   369  0078                     	ds	1
   370                           
   371                           	psect	cstackBANK0
   372  0020                     __pcstackBANK0:
   373  0020                     ??_main:
   374                           
   375                           ; 1 bytes @ 0x0
   376  0020                     	ds	1
   377                           
   378                           	psect	maintext
   379  011C                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 52 in file "main2.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       1       0       0       0
   402 ;;      Totals:         0       1       0       0       0
   403 ;;Total ram usage:        1 bytes
   404 ;; Hardware stack levels required when called:    2
   405 ;; This function calls:
   406 ;;		_ADC_init
   407 ;;		_setup
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _main
   415  011C                     _main:
   416  011C                     l1096:	
   417                           ;incstack = 0
   418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   419                           
   420                           
   421                           ;main2.c: 53:     setup();
   422  011C  120A  118A  217C  120A  118A  	fcall	_setup
   423  0121                     l1098:
   424                           
   425                           ;main2.c: 54:     ADC_init(1, 2, 0, 1);
   426  0121  3002               	movlw	2
   427  0122  1283               	bcf	3,5	;RP0=0, select bank0
   428  0123  1303               	bcf	3,6	;RP1=0, select bank0
   429  0124  00A0               	movwf	??_main
   430  0125  0820               	movf	??_main,w
   431  0126  00F3               	movwf	ADC_init@Channel
   432  0127  01F4               	clrf	ADC_init@Justified
   433  0128  01F5               	clrf	ADC_init@Vref
   434  0129  0AF5               	incf	ADC_init@Vref,f
   435  012A  3001               	movlw	1
   436  012B  120A  118A  2015  120A  118A  	fcall	_ADC_init
   437  0130                     l1100:
   438                           
   439                           ;main2.c: 56:     ADC_cflag = 1;
   440  0130  01FA               	clrf	_ADC_cflag
   441  0131  0AFA               	incf	_ADC_cflag,f
   442  0132                     l1102:
   443                           
   444                           ;main2.c: 58:         PORTC = ADC_analogvalue;
   445  0132  0879               	movf	_ADC_analogvalue,w
   446  0133  1283               	bcf	3,5	;RP0=0, select bank0
   447  0134  1303               	bcf	3,6	;RP1=0, select bank0
   448  0135  0087               	movwf	7	;volatile
   449  0136                     l1104:
   450                           
   451                           ;main2.c: 59:         if (ADC_cflag == 1) {
   452  0136  037A               	decf	_ADC_cflag,w
   453  0137  1D03               	btfss	3,2
   454  0138  293A               	goto	u91
   455  0139  293B               	goto	u90
   456  013A                     u91:
   457  013A  2947               	goto	l1112
   458  013B                     u90:
   459  013B                     l1106:
   460                           
   461                           ;main2.c: 60:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   462  013B  30C7               	movlw	199
   463  013C  1283               	bcf	3,5	;RP0=0, select bank0
   464  013D  1303               	bcf	3,6	;RP1=0, select bank0
   465  013E  00A0               	movwf	??_main
   466  013F                     u117:
   467  013F  2940               	nop2
   468  0140  0BA0               	decfsz	??_main,f
   469  0141  293F               	goto	u117
   470  0142  2943               	nop2
   471  0143                     l1108:
   472                           
   473                           ;main2.c: 61:             ADC_cflag = 0;
   474  0143  01FA               	clrf	_ADC_cflag
   475  0144                     l1110:
   476                           
   477                           ;main2.c: 62:             ADCON0bits.GO = 1;
   478  0144  1283               	bcf	3,5	;RP0=0, select bank0
   479  0145  1303               	bcf	3,6	;RP1=0, select bank0
   480  0146  149F               	bsf	31,1	;volatile
   481  0147                     l1112:
   482                           
   483                           ;main2.c: 64:         if (ADC_analogvalue > PORTD){
   484  0147  0879               	movf	_ADC_analogvalue,w
   485  0148  0208               	subwf	8,w	;volatile
   486  0149  1803               	skipnc
   487  014A  294C               	goto	u101
   488  014B  294D               	goto	u100
   489  014C                     u101:
   490  014C  2932               	goto	l1102
   491  014D                     u100:
   492  014D                     l1114:
   493                           
   494                           ;main2.c: 65:             PORTEbits.RE0 = 1;
   495  014D  1409               	bsf	9,0	;volatile
   496  014E  2932               	goto	l1102
   497  014F  120A  118A  280C   	ljmp	start
   498  0152                     __end_of_main:
   499                           
   500                           	psect	text1
   501  017C                     __ptext1:	
   502 ;; *************** function _setup *****************
   503 ;; Defined at:
   504 ;;		line 74 in file "main2.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		status,2
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _setup
   534  017C                     _setup:
   535  017C                     l714:	
   536                           ;incstack = 0
   537                           ; Regs used in _setup: [status,2]
   538                           
   539                           
   540                           ;main2.c: 76:     ANSEL = 0;
   541  017C  1683               	bsf	3,5	;RP0=1, select bank3
   542  017D  1703               	bsf	3,6	;RP1=1, select bank3
   543  017E  0188               	clrf	8	;volatile
   544                           
   545                           ;main2.c: 77:     ANSELH = 0;
   546  017F  0189               	clrf	9	;volatile
   547  0180                     l716:
   548                           
   549                           ;main2.c: 78:     ANSELbits.ANS2 = 1;
   550  0180  1508               	bsf	8,2	;volatile
   551  0181                     l718:
   552                           
   553                           ;main2.c: 80:     INTCONbits.GIE = 1;
   554  0181  178B               	bsf	11,7	;volatile
   555                           
   556                           ;main2.c: 89:     TMR0 = 0;
   557  0182  1283               	bcf	3,5	;RP0=0, select bank0
   558  0183  1303               	bcf	3,6	;RP1=0, select bank0
   559  0184  0181               	clrf	1	;volatile
   560                           
   561                           ;main2.c: 90:     TRISA = 0;
   562  0185  1683               	bsf	3,5	;RP0=1, select bank1
   563  0186  1303               	bcf	3,6	;RP1=0, select bank1
   564  0187  0185               	clrf	5	;volatile
   565  0188                     l720:
   566                           
   567                           ;main2.c: 91:     TRISAbits.TRISA2 = 1;
   568  0188  1505               	bsf	5,2	;volatile
   569                           
   570                           ;main2.c: 92:     TRISC = 0;
   571  0189  0187               	clrf	7	;volatile
   572                           
   573                           ;main2.c: 93:     TRISD = 0;
   574  018A  0188               	clrf	8	;volatile
   575                           
   576                           ;main2.c: 94:     TRISB = 0;
   577  018B  0186               	clrf	6	;volatile
   578                           
   579                           ;main2.c: 95:     PORTC = 0;
   580  018C  1283               	bcf	3,5	;RP0=0, select bank0
   581  018D  1303               	bcf	3,6	;RP1=0, select bank0
   582  018E  0187               	clrf	7	;volatile
   583                           
   584                           ;main2.c: 96:     PORTD = 0;
   585  018F  0188               	clrf	8	;volatile
   586  0190                     l722:
   587                           
   588                           ;main2.c: 97:     TRISBbits.TRISB1 = 1;
   589  0190  1683               	bsf	3,5	;RP0=1, select bank1
   590  0191  1303               	bcf	3,6	;RP1=0, select bank1
   591  0192  1486               	bsf	6,1	;volatile
   592  0193                     l724:
   593                           
   594                           ;main2.c: 98:     TRISBbits.TRISB0 = 1;
   595  0193  1406               	bsf	6,0	;volatile
   596  0194                     l726:
   597                           
   598                           ;main2.c: 99:     INTCONbits.PEIE = 1;
   599  0194  170B               	bsf	11,6	;volatile
   600  0195                     l728:
   601                           
   602                           ;main2.c: 100:     INTCONbits.RBIE = 1;
   603  0195  158B               	bsf	11,3	;volatile
   604  0196                     l730:
   605                           
   606                           ;main2.c: 101:     IOCBbits.IOCB0 = 1;
   607  0196  1416               	bsf	22,0	;volatile
   608  0197                     l732:
   609                           
   610                           ;main2.c: 102:     IOCBbits.IOCB1 = 1;
   611  0197  1496               	bsf	22,1	;volatile
   612  0198                     l734:
   613                           
   614                           ;main2.c: 103:     INTCONbits.RBIF = 0;
   615  0198  100B               	bcf	11,0	;volatile
   616  0199                     l736:
   617                           
   618                           ;main2.c: 105:     PIR1bits.ADIF = 0;
   619  0199  1283               	bcf	3,5	;RP0=0, select bank0
   620  019A  1303               	bcf	3,6	;RP1=0, select bank0
   621  019B  130C               	bcf	12,6	;volatile
   622  019C                     l738:
   623                           
   624                           ;main2.c: 106:     PIE1bits.ADIE = 1;
   625  019C  1683               	bsf	3,5	;RP0=1, select bank1
   626  019D  1303               	bcf	3,6	;RP1=0, select bank1
   627  019E  170C               	bsf	12,6	;volatile
   628  019F                     l740:
   629                           
   630                           ;main2.c: 107:     ADCON0bits.ADON = 1;
   631  019F  1283               	bcf	3,5	;RP0=0, select bank0
   632  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   633  01A1  141F               	bsf	31,0	;volatile
   634  01A2                     l63:
   635  01A2  0008               	return
   636  01A3                     __end_of_setup:
   637                           
   638                           	psect	text2
   639  0015                     __ptext2:	
   640 ;; *************** function _ADC_init *****************
   641 ;; Defined at:
   642 ;;		line 3 in file "ADC.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  ADCSbit         1    wreg     unsigned char 
   645 ;;  Channel         1    3[COMMON] unsigned char 
   646 ;;  Justified       1    4[COMMON] unsigned char 
   647 ;;  Vref            1    5[COMMON] unsigned char 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  ADCSbit         1    8[COMMON] unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         3       0       0       0       0
   660 ;;      Locals:         1       0       0       0       0
   661 ;;      Temps:          2       0       0       0       0
   662 ;;      Totals:         6       0       0       0       0
   663 ;;Total ram usage:        6 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _ADC_init
   675  0015                     _ADC_init:
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   679                           ;ADC_init@ADCSbit stored from wreg
   680  0015  00F8               	movwf	ADC_init@ADCSbit
   681  0016                     l928:
   682                           
   683                           ;ADC.c: 5:     switch (ADCSbit){
   684  0016  2830               	goto	l932
   685  0017                     l85:	
   686                           ;ADC.c: 6:         case 0:
   687                           
   688                           
   689                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   690  0017  1283               	bcf	3,5	;RP0=0, select bank0
   691  0018  1303               	bcf	3,6	;RP1=0, select bank0
   692  0019  139F               	bcf	31,7	;volatile
   693                           
   694                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   695  001A  131F               	bcf	31,6	;volatile
   696                           
   697                           ;ADC.c: 9:             break;
   698  001B  2897               	goto	l970
   699  001C                     l87:	
   700                           ;ADC.c: 10:         case 1:
   701                           
   702                           
   703                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   704  001C  1283               	bcf	3,5	;RP0=0, select bank0
   705  001D  1303               	bcf	3,6	;RP1=0, select bank0
   706  001E  139F               	bcf	31,7	;volatile
   707                           
   708                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   709  001F  171F               	bsf	31,6	;volatile
   710                           
   711                           ;ADC.c: 13:             break;
   712  0020  2897               	goto	l970
   713  0021                     l88:	
   714                           ;ADC.c: 14:         case 2:
   715                           
   716                           
   717                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   718  0021  1283               	bcf	3,5	;RP0=0, select bank0
   719  0022  1303               	bcf	3,6	;RP1=0, select bank0
   720  0023  179F               	bsf	31,7	;volatile
   721                           
   722                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   723  0024  131F               	bcf	31,6	;volatile
   724                           
   725                           ;ADC.c: 17:             break;
   726  0025  2897               	goto	l970
   727  0026                     l89:	
   728                           ;ADC.c: 18:         case 3:
   729                           
   730                           
   731                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   732  0026  1283               	bcf	3,5	;RP0=0, select bank0
   733  0027  1303               	bcf	3,6	;RP1=0, select bank0
   734  0028  179F               	bsf	31,7	;volatile
   735                           
   736                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   737  0029  171F               	bsf	31,6	;volatile
   738                           
   739                           ;ADC.c: 21:             break;
   740  002A  2897               	goto	l970
   741  002B                     l90:	
   742                           ;ADC.c: 22:         default:
   743                           
   744                           
   745                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   746  002B  1283               	bcf	3,5	;RP0=0, select bank0
   747  002C  1303               	bcf	3,6	;RP1=0, select bank0
   748  002D  139F               	bcf	31,7	;volatile
   749                           
   750                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   751  002E  171F               	bsf	31,6	;volatile
   752                           
   753                           ;ADC.c: 25:             break;
   754  002F  2897               	goto	l970
   755  0030                     l932:
   756  0030  0878               	movf	ADC_init@ADCSbit,w
   757  0031  00F6               	movwf	??_ADC_init
   758  0032  01F7               	clrf	??_ADC_init+1
   759                           
   760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   761                           ; Switch size 1, requested type "simple"
   762                           ; Number of cases is 1, Range of values is 0 to 0
   763                           ; switch strategies available:
   764                           ; Name         Instructions Cycles
   765                           ; simple_byte            4     3 (average)
   766                           ; direct_byte           11     8 (fixed)
   767                           ; jumptable            260     6 (fixed)
   768                           ;	Chosen strategy is simple_byte
   769  0033  0877               	movf	??_ADC_init+1,w
   770  0034  3A00               	xorlw	0	; case 0
   771  0035  1903               	skipnz
   772  0036  2838               	goto	l1196
   773  0037  282B               	goto	l90
   774  0038                     l1196:
   775                           
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 4, Range of values is 0 to 3
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte           13     7 (average)
   781                           ; direct_byte           20     8 (fixed)
   782                           ; jumptable            260     6 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  0038  0876               	movf	??_ADC_init,w
   785  0039  3A00               	xorlw	0	; case 0
   786  003A  1903               	skipnz
   787  003B  2817               	goto	l85
   788  003C  3A01               	xorlw	1	; case 1
   789  003D  1903               	skipnz
   790  003E  281C               	goto	l87
   791  003F  3A03               	xorlw	3	; case 2
   792  0040  1903               	skipnz
   793  0041  2821               	goto	l88
   794  0042  3A01               	xorlw	1	; case 3
   795  0043  1903               	skipnz
   796  0044  2826               	goto	l89
   797  0045  282B               	goto	l90
   798  0046                     l934:
   799                           
   800                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   801  0046  30C3               	movlw	-61
   802  0047  059F               	andwf	31,f	;volatile
   803                           
   804                           ;ADC.c: 31:             break;
   805  0048  28DD               	goto	l974
   806  0049                     l936:
   807                           
   808                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
   809  0049  081F               	movf	31,w	;volatile
   810  004A  39C3               	andlw	-61
   811  004B  3804               	iorlw	4
   812  004C  009F               	movwf	31	;volatile
   813                           
   814                           ;ADC.c: 34:             break;
   815  004D  28DD               	goto	l974
   816  004E                     l938:
   817                           
   818                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
   819  004E  081F               	movf	31,w	;volatile
   820  004F  39C3               	andlw	-61
   821  0050  3808               	iorlw	8
   822  0051  009F               	movwf	31	;volatile
   823                           
   824                           ;ADC.c: 37:             break;
   825  0052  28DD               	goto	l974
   826  0053                     l940:
   827                           
   828                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
   829  0053  081F               	movf	31,w	;volatile
   830  0054  39C3               	andlw	-61
   831  0055  380C               	iorlw	12
   832  0056  009F               	movwf	31	;volatile
   833                           
   834                           ;ADC.c: 40:             break;
   835  0057  28DD               	goto	l974
   836  0058                     l942:
   837                           
   838                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
   839  0058  081F               	movf	31,w	;volatile
   840  0059  39C3               	andlw	-61
   841  005A  3810               	iorlw	16
   842  005B  009F               	movwf	31	;volatile
   843                           
   844                           ;ADC.c: 43:             break;
   845  005C  28DD               	goto	l974
   846  005D                     l944:
   847                           
   848                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
   849  005D  081F               	movf	31,w	;volatile
   850  005E  39C3               	andlw	-61
   851  005F  3814               	iorlw	20
   852  0060  009F               	movwf	31	;volatile
   853                           
   854                           ;ADC.c: 46:             break;
   855  0061  28DD               	goto	l974
   856  0062                     l946:
   857                           
   858                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
   859  0062  081F               	movf	31,w	;volatile
   860  0063  39C3               	andlw	-61
   861  0064  3818               	iorlw	24
   862  0065  009F               	movwf	31	;volatile
   863                           
   864                           ;ADC.c: 49:             break;
   865  0066  28DD               	goto	l974
   866  0067                     l948:
   867                           
   868                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
   869  0067  081F               	movf	31,w	;volatile
   870  0068  39C3               	andlw	-61
   871  0069  381C               	iorlw	28
   872  006A  009F               	movwf	31	;volatile
   873                           
   874                           ;ADC.c: 52:             break;
   875  006B  28DD               	goto	l974
   876  006C                     l950:
   877                           
   878                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
   879  006C  081F               	movf	31,w	;volatile
   880  006D  39C3               	andlw	-61
   881  006E  3820               	iorlw	32
   882  006F  009F               	movwf	31	;volatile
   883                           
   884                           ;ADC.c: 55:             break;
   885  0070  28DD               	goto	l974
   886  0071                     l952:
   887                           
   888                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
   889  0071  081F               	movf	31,w	;volatile
   890  0072  39C3               	andlw	-61
   891  0073  3824               	iorlw	36
   892  0074  009F               	movwf	31	;volatile
   893                           
   894                           ;ADC.c: 58:             break;
   895  0075  28DD               	goto	l974
   896  0076                     l954:
   897                           
   898                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
   899  0076  081F               	movf	31,w	;volatile
   900  0077  39C3               	andlw	-61
   901  0078  3828               	iorlw	40
   902  0079  009F               	movwf	31	;volatile
   903                           
   904                           ;ADC.c: 61:             break;
   905  007A  28DD               	goto	l974
   906  007B                     l956:
   907                           
   908                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
   909  007B  081F               	movf	31,w	;volatile
   910  007C  39C3               	andlw	-61
   911  007D  382C               	iorlw	44
   912  007E  009F               	movwf	31	;volatile
   913                           
   914                           ;ADC.c: 64:             break;
   915  007F  28DD               	goto	l974
   916  0080                     l958:
   917                           
   918                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
   919  0080  081F               	movf	31,w	;volatile
   920  0081  39C3               	andlw	-61
   921  0082  3830               	iorlw	48
   922  0083  009F               	movwf	31	;volatile
   923                           
   924                           ;ADC.c: 67:             break;
   925  0084  28DD               	goto	l974
   926  0085                     l960:
   927                           
   928                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
   929  0085  081F               	movf	31,w	;volatile
   930  0086  39C3               	andlw	-61
   931  0087  3834               	iorlw	52
   932  0088  009F               	movwf	31	;volatile
   933                           
   934                           ;ADC.c: 70:             break;
   935  0089  28DD               	goto	l974
   936  008A                     l962:
   937                           
   938                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
   939  008A  081F               	movf	31,w	;volatile
   940  008B  39C3               	andlw	-61
   941  008C  3838               	iorlw	56
   942  008D  009F               	movwf	31	;volatile
   943                           
   944                           ;ADC.c: 73:             break;
   945  008E  28DD               	goto	l974
   946  008F                     l964:
   947                           
   948                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
   949  008F  303C               	movlw	60
   950  0090  049F               	iorwf	31,f	;volatile
   951                           
   952                           ;ADC.c: 76:             break;
   953  0091  28DD               	goto	l974
   954  0092                     l966:
   955                           
   956                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
   957  0092  081F               	movf	31,w	;volatile
   958  0093  39C3               	andlw	-61
   959  0094  3808               	iorlw	8
   960  0095  009F               	movwf	31	;volatile
   961                           
   962                           ;ADC.c: 79:             break;
   963  0096  28DD               	goto	l974
   964  0097                     l970:
   965  0097  0873               	movf	ADC_init@Channel,w
   966  0098  00F6               	movwf	??_ADC_init
   967  0099  01F7               	clrf	??_ADC_init+1
   968                           
   969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   970                           ; Switch size 1, requested type "simple"
   971                           ; Number of cases is 1, Range of values is 0 to 0
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte            4     3 (average)
   975                           ; direct_byte           11     8 (fixed)
   976                           ; jumptable            260     6 (fixed)
   977                           ;	Chosen strategy is simple_byte
   978  009A  0877               	movf	??_ADC_init+1,w
   979  009B  3A00               	xorlw	0	; case 0
   980  009C  1903               	skipnz
   981  009D  289F               	goto	l1198
   982  009E  2892               	goto	l966
   983  009F                     l1198:
   984                           
   985                           ; Switch size 1, requested type "simple"
   986                           ; Number of cases is 16, Range of values is 0 to 15
   987                           ; switch strategies available:
   988                           ; Name         Instructions Cycles
   989                           ; simple_byte           49    25 (average)
   990                           ; direct_byte           56     8 (fixed)
   991                           ; jumptable            260     6 (fixed)
   992                           ;	Chosen strategy is simple_byte
   993  009F  0876               	movf	??_ADC_init,w
   994  00A0  3A00               	xorlw	0	; case 0
   995  00A1  1903               	skipnz
   996  00A2  2846               	goto	l934
   997  00A3  3A01               	xorlw	1	; case 1
   998  00A4  1903               	skipnz
   999  00A5  2849               	goto	l936
  1000  00A6  3A03               	xorlw	3	; case 2
  1001  00A7  1903               	skipnz
  1002  00A8  284E               	goto	l938
  1003  00A9  3A01               	xorlw	1	; case 3
  1004  00AA  1903               	skipnz
  1005  00AB  2853               	goto	l940
  1006  00AC  3A07               	xorlw	7	; case 4
  1007  00AD  1903               	skipnz
  1008  00AE  2858               	goto	l942
  1009  00AF  3A01               	xorlw	1	; case 5
  1010  00B0  1903               	skipnz
  1011  00B1  285D               	goto	l944
  1012  00B2  3A03               	xorlw	3	; case 6
  1013  00B3  1903               	skipnz
  1014  00B4  2862               	goto	l946
  1015  00B5  3A01               	xorlw	1	; case 7
  1016  00B6  1903               	skipnz
  1017  00B7  2867               	goto	l948
  1018  00B8  3A0F               	xorlw	15	; case 8
  1019  00B9  1903               	skipnz
  1020  00BA  286C               	goto	l950
  1021  00BB  3A01               	xorlw	1	; case 9
  1022  00BC  1903               	skipnz
  1023  00BD  2871               	goto	l952
  1024  00BE  3A03               	xorlw	3	; case 10
  1025  00BF  1903               	skipnz
  1026  00C0  2876               	goto	l954
  1027  00C1  3A01               	xorlw	1	; case 11
  1028  00C2  1903               	skipnz
  1029  00C3  287B               	goto	l956
  1030  00C4  3A07               	xorlw	7	; case 12
  1031  00C5  1903               	skipnz
  1032  00C6  2880               	goto	l958
  1033  00C7  3A01               	xorlw	1	; case 13
  1034  00C8  1903               	skipnz
  1035  00C9  2885               	goto	l960
  1036  00CA  3A03               	xorlw	3	; case 14
  1037  00CB  1903               	skipnz
  1038  00CC  288A               	goto	l962
  1039  00CD  3A01               	xorlw	1	; case 15
  1040  00CE  1903               	skipnz
  1041  00CF  288F               	goto	l964
  1042  00D0  2892               	goto	l966
  1043  00D1                     l111:	
  1044                           ;ADC.c: 83:         case 0:
  1045                           
  1046                           
  1047                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1048  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1049  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1050  00D3  139F               	bcf	31,7	;volatile
  1051                           
  1052                           ;ADC.c: 85:             break;
  1053  00D4  28FC               	goto	l978
  1054  00D5                     l113:	
  1055                           ;ADC.c: 86:         case 1:
  1056                           
  1057                           
  1058                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1059  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1060  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1061  00D7  179F               	bsf	31,7	;volatile
  1062                           
  1063                           ;ADC.c: 88:             break;
  1064  00D8  28FC               	goto	l978
  1065  00D9                     l114:	
  1066                           ;ADC.c: 89:         default:
  1067                           
  1068                           
  1069                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1070  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1071  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1072  00DB  139F               	bcf	31,7	;volatile
  1073                           
  1074                           ;ADC.c: 91:             break;
  1075  00DC  28FC               	goto	l978
  1076  00DD                     l974:
  1077  00DD  0874               	movf	ADC_init@Justified,w
  1078  00DE  00F6               	movwf	??_ADC_init
  1079  00DF  01F7               	clrf	??_ADC_init+1
  1080                           
  1081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1082                           ; Switch size 1, requested type "simple"
  1083                           ; Number of cases is 1, Range of values is 0 to 0
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte            4     3 (average)
  1087                           ; direct_byte           11     8 (fixed)
  1088                           ; jumptable            260     6 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  00E0  0877               	movf	??_ADC_init+1,w
  1091  00E1  3A00               	xorlw	0	; case 0
  1092  00E2  1903               	skipnz
  1093  00E3  28E5               	goto	l1200
  1094  00E4  28D9               	goto	l114
  1095  00E5                     l1200:
  1096                           
  1097                           ; Switch size 1, requested type "simple"
  1098                           ; Number of cases is 2, Range of values is 0 to 1
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte            7     4 (average)
  1102                           ; direct_byte           14     8 (fixed)
  1103                           ; jumptable            260     6 (fixed)
  1104                           ;	Chosen strategy is simple_byte
  1105  00E5  0876               	movf	??_ADC_init,w
  1106  00E6  3A00               	xorlw	0	; case 0
  1107  00E7  1903               	skipnz
  1108  00E8  28D1               	goto	l111
  1109  00E9  3A01               	xorlw	1	; case 1
  1110  00EA  1903               	skipnz
  1111  00EB  28D5               	goto	l113
  1112  00EC  28D9               	goto	l114
  1113  00ED                     l116:	
  1114                           ;ADC.c: 95:         case 1:
  1115                           
  1116                           
  1117                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1118  00ED  129F               	bcf	31,5	;volatile
  1119                           
  1120                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1121  00EE  121F               	bcf	31,4	;volatile
  1122                           
  1123                           ;ADC.c: 98:             break;
  1124  00EF  2912               	goto	l117
  1125  00F0                     l118:	
  1126                           ;ADC.c: 99:         case 2:
  1127                           
  1128                           
  1129                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1130  00F0  129F               	bcf	31,5	;volatile
  1131                           
  1132                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1133  00F1  161F               	bsf	31,4	;volatile
  1134                           
  1135                           ;ADC.c: 102:             break;
  1136  00F2  2912               	goto	l117
  1137  00F3                     l119:	
  1138                           ;ADC.c: 103:         case 3:
  1139                           
  1140                           
  1141                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1142  00F3  169F               	bsf	31,5	;volatile
  1143                           
  1144                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1145  00F4  121F               	bcf	31,4	;volatile
  1146                           
  1147                           ;ADC.c: 106:             break;
  1148  00F5  2912               	goto	l117
  1149  00F6                     l120:	
  1150                           ;ADC.c: 107:         case 4:
  1151                           
  1152                           
  1153                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1154  00F6  169F               	bsf	31,5	;volatile
  1155                           
  1156                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1157  00F7  161F               	bsf	31,4	;volatile
  1158                           
  1159                           ;ADC.c: 110:             break;
  1160  00F8  2912               	goto	l117
  1161  00F9                     l121:	
  1162                           ;ADC.c: 111:         default:
  1163                           
  1164                           
  1165                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1166  00F9  129F               	bcf	31,5	;volatile
  1167                           
  1168                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1169  00FA  121F               	bcf	31,4	;volatile
  1170                           
  1171                           ;ADC.c: 114:             break;
  1172  00FB  2912               	goto	l117
  1173  00FC                     l978:
  1174  00FC  0875               	movf	ADC_init@Vref,w
  1175  00FD  00F6               	movwf	??_ADC_init
  1176  00FE  01F7               	clrf	??_ADC_init+1
  1177                           
  1178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 1, Range of values is 0 to 0
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            4     3 (average)
  1184                           ; direct_byte           11     8 (fixed)
  1185                           ; jumptable            260     6 (fixed)
  1186                           ;	Chosen strategy is simple_byte
  1187  00FF  0877               	movf	??_ADC_init+1,w
  1188  0100  3A00               	xorlw	0	; case 0
  1189  0101  1903               	skipnz
  1190  0102  2904               	goto	l1202
  1191  0103  28F9               	goto	l121
  1192  0104                     l1202:
  1193                           
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 4, Range of values is 1 to 4
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte           13     7 (average)
  1199                           ; direct_byte           23    11 (fixed)
  1200                           ; jumptable            263     9 (fixed)
  1201                           ;	Chosen strategy is simple_byte
  1202  0104  0876               	movf	??_ADC_init,w
  1203  0105  3A01               	xorlw	1	; case 1
  1204  0106  1903               	skipnz
  1205  0107  28ED               	goto	l116
  1206  0108  3A03               	xorlw	3	; case 2
  1207  0109  1903               	skipnz
  1208  010A  28F0               	goto	l118
  1209  010B  3A01               	xorlw	1	; case 3
  1210  010C  1903               	skipnz
  1211  010D  28F3               	goto	l119
  1212  010E  3A07               	xorlw	7	; case 4
  1213  010F  1903               	skipnz
  1214  0110  28F6               	goto	l120
  1215  0111  28F9               	goto	l121
  1216  0112                     l117:
  1217                           
  1218                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1219  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0114  130C               	bcf	12,6	;volatile
  1222                           
  1223                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1224  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1225  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1226  0117  170C               	bsf	12,6	;volatile
  1227                           
  1228                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1229  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1231  011A  141F               	bsf	31,0	;volatile
  1232  011B                     l122:
  1233  011B  0008               	return
  1234  011C                     __end_of_ADC_init:
  1235                           
  1236                           	psect	text3
  1237  0152                     __ptext3:	
  1238 ;; *************** function _isr *****************
  1239 ;; Defined at:
  1240 ;;		line 118 in file "main2.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0
  1256 ;;      Temps:          3       0       0       0       0
  1257 ;;      Totals:         3       0       0       0       0
  1258 ;;Total ram usage:        3 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		Interrupt level 1
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _isr
  1269  0152                     _isr:
  1270  0152                     i1l830:
  1271                           
  1272                           ;main2.c: 119:     if (INTCONbits.RBIF == 1) {
  1273  0152  1C0B               	btfss	11,0	;volatile
  1274  0153  2955               	goto	u3_21
  1275  0154  2956               	goto	u3_20
  1276  0155                     u3_21:
  1277  0155  2968               	goto	i1l840
  1278  0156                     u3_20:
  1279  0156                     i1l832:
  1280                           
  1281                           ;main2.c: 120:         if (PORTBbits.RB0 == 1) {
  1282  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0158  1C06               	btfss	6,0	;volatile
  1285  0159  295B               	goto	u4_21
  1286  015A  295C               	goto	u4_20
  1287  015B                     u4_21:
  1288  015B  295F               	goto	i1l69
  1289  015C                     u4_20:
  1290  015C                     i1l834:
  1291                           
  1292                           ;main2.c: 121:             PORTD--;
  1293  015C  3001               	movlw	1
  1294  015D  0288               	subwf	8,f	;volatile
  1295                           
  1296                           ;main2.c: 122:         } else if (PORTBbits.RB1 == 1) {
  1297  015E  2967               	goto	i1l838
  1298  015F                     i1l69:
  1299  015F  1C86               	btfss	6,1	;volatile
  1300  0160  2962               	goto	u5_21
  1301  0161  2963               	goto	u5_20
  1302  0162                     u5_21:
  1303  0162  2967               	goto	i1l838
  1304  0163                     u5_20:
  1305  0163                     i1l836:
  1306                           
  1307                           ;main2.c: 123:             PORTD++;
  1308  0163  3001               	movlw	1
  1309  0164  00F0               	movwf	??_isr
  1310  0165  0870               	movf	??_isr,w
  1311  0166  0788               	addwf	8,f	;volatile
  1312  0167                     i1l838:
  1313                           
  1314                           ;main2.c: 125:         INTCONbits.RBIF = 0;
  1315  0167  100B               	bcf	11,0	;volatile
  1316  0168                     i1l840:
  1317                           
  1318                           ;main2.c: 127:     if(PIR1bits.ADIF == 1){
  1319  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1321  016A  1F0C               	btfss	12,6	;volatile
  1322  016B  296D               	goto	u6_21
  1323  016C  296E               	goto	u6_20
  1324  016D                     u6_21:
  1325  016D  2975               	goto	i1l73
  1326  016E                     u6_20:
  1327  016E                     i1l842:
  1328                           
  1329                           ;main2.c: 128:         ADC_analogvalue = ADRESH;
  1330  016E  081E               	movf	30,w	;volatile
  1331  016F  00F0               	movwf	??_isr
  1332  0170  0870               	movf	??_isr,w
  1333  0171  00F9               	movwf	_ADC_analogvalue
  1334  0172                     i1l844:
  1335                           
  1336                           ;main2.c: 129:         ADC_cflag = 1;
  1337  0172  01FA               	clrf	_ADC_cflag
  1338  0173  0AFA               	incf	_ADC_cflag,f
  1339  0174                     i1l846:
  1340                           
  1341                           ;main2.c: 130:         PIR1bits.ADIF = 0;
  1342  0174  130C               	bcf	12,6	;volatile
  1343  0175                     i1l73:
  1344  0175  0872               	movf	??_isr+2,w
  1345  0176  008A               	movwf	10
  1346  0177  0E71               	swapf	??_isr+1,w
  1347  0178  0083               	movwf	3
  1348  0179  0EFE               	swapf	btemp,f
  1349  017A  0E7E               	swapf	btemp,w
  1350  017B  0009               	retfie
  1351  017C                     __end_of_isr:
  1352  007E                     btemp	set	126	;btemp
  1353  007E                     wtemp0	set	126
  1354                           
  1355                           	psect	intentry
  1356  0004                     __pintentry:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _isr: [wreg+status,2+status,0]
  1359                           
  1360  0004                     interrupt_function:
  1361  007E                     saved_w	set	btemp
  1362  0004  00FE               	movwf	btemp
  1363  0005  0E03               	swapf	3,w
  1364  0006  00F1               	movwf	??_isr+1
  1365  0007  080A               	movf	10,w
  1366  0008  00F2               	movwf	??_isr+2
  1367  0009  120A  118A  2952   	ljmp	_isr
  1368                           
  1369                           	psect	config
  1370                           
  1371                           ;Config register CONFIG1 @ 0x2007
  1372                           ;	Oscillator Selection bits
  1373                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1374                           ;	Watchdog Timer Enable bit
  1375                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1376                           ;	Power-up Timer Enable bit
  1377                           ;	PWRTE = OFF, PWRT disabled
  1378                           ;	RE3/MCLR pin function select bit
  1379                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1380                           ;	Code Protection bit
  1381                           ;	CP = OFF, Program memory code protection is disabled
  1382                           ;	Data Code Protection bit
  1383                           ;	CPD = OFF, Data memory code protection is disabled
  1384                           ;	Brown Out Reset Selection bits
  1385                           ;	BOREN = ON, BOR enabled
  1386                           ;	Internal External Switchover bit
  1387                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1388                           ;	Fail-Safe Clock Monitor Enabled bit
  1389                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1390                           ;	Low Voltage Programming Enable bit
  1391                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1392                           ;	In-Circuit Debugger Mode bit
  1393                           ;	DEBUG = 0x1, unprogrammed default
  1394  2007                     	org	8199
  1395  2007  23F4               	dw	9204
  1396                           
  1397                           ;Config register CONFIG2 @ 0x2008
  1398                           ;	Brown-out Reset Selection bit
  1399                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1400                           ;	Flash Program Memory Self Write Enable bits
  1401                           ;	WRT = OFF, Write protection off
  1402  2008                     	org	8200
  1403  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              0 BANK0      1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 02:17:12 2021

                     l63 01A2                       l90 002B                       l85 0017  
                     l87 001C                       l88 0021                       l89 0026  
                     u90 013B                       u91 013A                      l111 00D1  
                    l120 00F6                      l121 00F9                      l113 00D5  
                    l122 011B                      l114 00D9                      l116 00ED  
                    l117 0112                      l118 00F0                      l119 00F3  
                    l720 0188                      l730 0196                      l722 0190  
                    l714 017C                      l740 019F                      l732 0197  
                    l724 0193                      l716 0180                      l734 0198  
                    l726 0194                      l718 0181                      l736 0199  
                    l728 0195                      l738 019C                      l940 0053  
                    l932 0030                      l950 006C                      l942 0058  
                    l934 0046                      l960 0085                      l952 0071  
                    l944 005D                      l936 0049                      l928 0016  
                    l962 008A                      l954 0076                      l946 0062  
                    l938 004E                      l970 0097                      l964 008F  
                    l956 007B                      l948 0067                      l966 0092  
                    l958 0080                      l974 00DD                      l978 00FC  
                    u100 014D                      u101 014C                      u117 013F  
                    _isr 0152                     l1100 0130                     l1110 0144  
                   l1102 0132                     l1200 00E5                     l1112 0147  
                   l1104 0136                     l1202 0104                     l1114 014D  
                   l1106 013B                     l1108 0143                     l1096 011C  
                   l1098 0121                     l1196 0038                     l1198 009F  
                   ?_isr 0070                     i1l73 0175                     i1l69 015F  
                   _TMR0 0001                     u3_20 0156                     u3_21 0155  
                   u4_20 015C                     u4_21 015B                     u5_20 0163  
                   u5_21 0162                     u6_20 016E                     u6_21 016D  
                   _main 011C        ADC_init@Justified 0074                     btemp 007E  
                   start 000C         __end_of_ADC_init 011C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l830 0152  
                  i1l832 0156                    i1l840 0168                    i1l842 016E  
                  i1l834 015C                    i1l844 0172                    i1l836 0163  
                  i1l846 0174                    i1l838 0167                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 017C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0152                   ??_main 0020  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
        ADC_init@ADCSbit 0078                   saved_w 007E                ?_ADC_init 0073  
        ADC_init@Channel 0073  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 01A3               ??_ADC_init 0076                  ??_setup 0073  
             __pmaintext 011C               __pintentry 0004                _ADC_cflag 007A  
              _ANSELbits 0188                  __ptext1 017C                  __ptext2 0015  
                __ptext3 0152             __size_of_isr 002A     end_of_initialization 0011  
        _ADC_analogvalue 0079                _PORTBbits 0006                _PORTEbits 0009  
              _TRISAbits 0085                _TRISBbits 0086        __size_of_ADC_init 0107  
           ADC_init@Vref 0075      start_initialization 000F              __end_of_isr 017C  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
               _ADC_init 0015           __size_of_setup 0027        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F            __size_of_main 0036  
             _INTCONbits 000B                 intlevel1 0000  
