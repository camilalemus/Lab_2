

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 01:44:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001E                     _ADRESH	set	30
   284  0006                     _PORTBbits	set	6
   285  000C                     _PIR1bits	set	12
   286  0008                     _PORTD	set	8
   287  0007                     _PORTC	set	7
   288  0001                     _TMR0	set	1
   289  000B                     _INTCONbits	set	11
   290  001F                     _ADCON0bits	set	31
   291  009F                     _ADCON1bits	set	159
   292  008C                     _PIE1bits	set	140
   293  0096                     _IOCBbits	set	150
   294  0086                     _TRISBbits	set	134
   295  0086                     _TRISB	set	134
   296  0088                     _TRISD	set	136
   297  0087                     _TRISC	set	135
   298  0085                     _TRISAbits	set	133
   299  0085                     _TRISA	set	133
   300  0188                     _ANSELbits	set	392
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   312  0010                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  0010                     __end_of__initialization:
   316  0010  0183               	clrf	3
   317  0011  120A  118A  291B   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  007A                     __pbssCOMMON:
   321  007A                     _ADC_cflag:
   322  007A                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_setup:
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_isr:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 1 bytes @ 0x0
   338  0070                     	ds	3
   339  0073                     ??_setup:
   340  0073                     ?_ADC_init:	
   341                           ; 1 bytes @ 0x3
   342                           
   343  0073                     ADC_init@Channel:	
   344                           ; 1 bytes @ 0x3
   345                           
   346                           
   347                           ; 1 bytes @ 0x3
   348  0073                     	ds	1
   349  0074                     ADC_init@Justified:
   350                           
   351                           ; 1 bytes @ 0x4
   352  0074                     	ds	1
   353  0075                     ADC_init@Vref:
   354                           
   355                           ; 1 bytes @ 0x5
   356  0075                     	ds	1
   357  0076                     ??_ADC_init:
   358                           
   359                           ; 1 bytes @ 0x6
   360  0076                     	ds	2
   361  0078                     ADC_init@ADCSbit:
   362                           
   363                           ; 1 bytes @ 0x8
   364  0078                     	ds	1
   365  0079                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x9
   368  0079                     	ds	1
   369                           
   370                           	psect	maintext
   371  011B                     __pmaintext:	
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 51 in file "main2.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : B00/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          1       0       0       0       0
   394 ;;      Totals:         1       0       0       0       0
   395 ;;Total ram usage:        1 bytes
   396 ;; Hardware stack levels required when called:    2
   397 ;; This function calls:
   398 ;;		_ADC_init
   399 ;;		_setup
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           
   406                           ;psect for function _main
   407  011B                     _main:
   408  011B                     l985:	
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   411                           
   412                           
   413                           ;main2.c: 52:     setup();
   414  011B  120A  118A  216B  120A  118A  	fcall	_setup
   415  0120                     l987:
   416                           
   417                           ;main2.c: 53:     ADC_init(1, 2, 0, 1);
   418  0120  3002               	movlw	2
   419  0121  00F9               	movwf	??_main
   420  0122  0879               	movf	??_main,w
   421  0123  00F3               	movwf	ADC_init@Channel
   422  0124  01F4               	clrf	ADC_init@Justified
   423  0125  01F5               	clrf	ADC_init@Vref
   424  0126  0AF5               	incf	ADC_init@Vref,f
   425  0127  3001               	movlw	1
   426  0128  120A  118A  2014  120A  118A  	fcall	_ADC_init
   427  012D                     l989:
   428                           
   429                           ;main2.c: 55:     ADC_cflag = 1;
   430  012D  01FA               	clrf	_ADC_cflag
   431  012E  0AFA               	incf	_ADC_cflag,f
   432  012F                     l991:
   433                           
   434                           ;main2.c: 57:         if (ADC_cflag == 1) {
   435  012F  037A               	decf	_ADC_cflag,w
   436  0130  1D03               	btfss	3,2
   437  0131  2933               	goto	u61
   438  0132  2934               	goto	u60
   439  0133                     u61:
   440  0133  292F               	goto	l991
   441  0134                     u60:
   442  0134                     l993:
   443                           
   444                           ;main2.c: 58:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   445  0134  30C7               	movlw	199
   446  0135  00F9               	movwf	??_main
   447  0136                     u77:
   448  0136  2937               	nop2
   449  0137  0BF9               	decfsz	??_main,f
   450  0138  2936               	goto	u77
   451  0139  293A               	nop2
   452  013A  293B               	nop2
   453  013B                     l995:
   454                           
   455                           ;main2.c: 59:             ADC_cflag = 0;
   456  013B  01FA               	clrf	_ADC_cflag
   457  013C                     l997:
   458                           
   459                           ;main2.c: 60:             ADCON0bits.GO = 1;
   460  013C  1283               	bcf	3,5	;RP0=0, select bank0
   461  013D  1303               	bcf	3,6	;RP1=0, select bank0
   462  013E  149F               	bsf	31,1	;volatile
   463  013F  292F               	goto	l991
   464  0140  120A  118A  280C   	ljmp	start
   465  0143                     __end_of_main:
   466                           
   467                           	psect	text1
   468  016B                     __ptext1:	
   469 ;; *************** function _setup *****************
   470 ;; Defined at:
   471 ;;		line 69 in file "main2.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		status,2
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _setup
   501  016B                     _setup:
   502  016B                     l709:	
   503                           ;incstack = 0
   504                           ; Regs used in _setup: [status,2]
   505                           
   506                           
   507                           ;main2.c: 71:     ANSEL = 0;
   508  016B  1683               	bsf	3,5	;RP0=1, select bank3
   509  016C  1703               	bsf	3,6	;RP1=1, select bank3
   510  016D  0188               	clrf	8	;volatile
   511                           
   512                           ;main2.c: 72:     ANSELH = 0;
   513  016E  0189               	clrf	9	;volatile
   514  016F                     l711:
   515                           
   516                           ;main2.c: 73:     ANSELbits.ANS2 = 1;
   517  016F  1508               	bsf	8,2	;volatile
   518  0170                     l713:
   519                           
   520                           ;main2.c: 75:     INTCONbits.GIE = 1;
   521  0170  178B               	bsf	11,7	;volatile
   522                           
   523                           ;main2.c: 84:     TMR0 = 0;
   524  0171  1283               	bcf	3,5	;RP0=0, select bank0
   525  0172  1303               	bcf	3,6	;RP1=0, select bank0
   526  0173  0181               	clrf	1	;volatile
   527                           
   528                           ;main2.c: 85:     TRISA = 0;
   529  0174  1683               	bsf	3,5	;RP0=1, select bank1
   530  0175  1303               	bcf	3,6	;RP1=0, select bank1
   531  0176  0185               	clrf	5	;volatile
   532  0177                     l715:
   533                           
   534                           ;main2.c: 86:     TRISAbits.TRISA2 = 1;
   535  0177  1505               	bsf	5,2	;volatile
   536                           
   537                           ;main2.c: 87:     TRISC = 0;
   538  0178  0187               	clrf	7	;volatile
   539                           
   540                           ;main2.c: 88:     TRISD = 0;
   541  0179  0188               	clrf	8	;volatile
   542                           
   543                           ;main2.c: 89:     TRISB = 0;
   544  017A  0186               	clrf	6	;volatile
   545                           
   546                           ;main2.c: 90:     PORTC = 0;
   547  017B  1283               	bcf	3,5	;RP0=0, select bank0
   548  017C  1303               	bcf	3,6	;RP1=0, select bank0
   549  017D  0187               	clrf	7	;volatile
   550                           
   551                           ;main2.c: 91:     PORTD = 0;
   552  017E  0188               	clrf	8	;volatile
   553  017F                     l717:
   554                           
   555                           ;main2.c: 92:     TRISBbits.TRISB1 = 1;
   556  017F  1683               	bsf	3,5	;RP0=1, select bank1
   557  0180  1303               	bcf	3,6	;RP1=0, select bank1
   558  0181  1486               	bsf	6,1	;volatile
   559  0182                     l719:
   560                           
   561                           ;main2.c: 93:     TRISBbits.TRISB0 = 1;
   562  0182  1406               	bsf	6,0	;volatile
   563  0183                     l721:
   564                           
   565                           ;main2.c: 94:     INTCONbits.PEIE = 1;
   566  0183  170B               	bsf	11,6	;volatile
   567  0184                     l723:
   568                           
   569                           ;main2.c: 95:     INTCONbits.RBIE = 1;
   570  0184  158B               	bsf	11,3	;volatile
   571  0185                     l725:
   572                           
   573                           ;main2.c: 96:     IOCBbits.IOCB0 = 1;
   574  0185  1416               	bsf	22,0	;volatile
   575  0186                     l727:
   576                           
   577                           ;main2.c: 97:     IOCBbits.IOCB1 = 1;
   578  0186  1496               	bsf	22,1	;volatile
   579  0187                     l729:
   580                           
   581                           ;main2.c: 98:     INTCONbits.RBIF = 0;
   582  0187  100B               	bcf	11,0	;volatile
   583  0188                     l731:
   584                           
   585                           ;main2.c: 100:     PIR1bits.ADIF = 0;
   586  0188  1283               	bcf	3,5	;RP0=0, select bank0
   587  0189  1303               	bcf	3,6	;RP1=0, select bank0
   588  018A  130C               	bcf	12,6	;volatile
   589  018B                     l733:
   590                           
   591                           ;main2.c: 101:     PIE1bits.ADIE = 1;
   592  018B  1683               	bsf	3,5	;RP0=1, select bank1
   593  018C  1303               	bcf	3,6	;RP1=0, select bank1
   594  018D  170C               	bsf	12,6	;volatile
   595  018E                     l735:
   596                           
   597                           ;main2.c: 102:     ADCON0bits.ADON = 1;
   598  018E  1283               	bcf	3,5	;RP0=0, select bank0
   599  018F  1303               	bcf	3,6	;RP1=0, select bank0
   600  0190  141F               	bsf	31,0	;volatile
   601  0191                     l58:
   602  0191  0008               	return
   603  0192                     __end_of_setup:
   604                           
   605                           	psect	text2
   606  0014                     __ptext2:	
   607 ;; *************** function _ADC_init *****************
   608 ;; Defined at:
   609 ;;		line 3 in file "ADC.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  ADCSbit         1    wreg     unsigned char 
   612 ;;  Channel         1    3[COMMON] unsigned char 
   613 ;;  Justified       1    4[COMMON] unsigned char 
   614 ;;  Vref            1    5[COMMON] unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  ADCSbit         1    8[COMMON] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         3       0       0       0       0
   627 ;;      Locals:         1       0       0       0       0
   628 ;;      Temps:          2       0       0       0       0
   629 ;;      Totals:         6       0       0       0       0
   630 ;;Total ram usage:        6 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _ADC_init
   642  0014                     _ADC_init:
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   646                           ;ADC_init@ADCSbit stored from wreg
   647  0014  00F8               	movwf	ADC_init@ADCSbit
   648  0015                     l917:
   649                           
   650                           ;ADC.c: 5:     switch (ADCSbit){
   651  0015  282F               	goto	l921
   652  0016                     l80:	
   653                           ;ADC.c: 6:         case 0:
   654                           
   655                           
   656                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   657  0016  1283               	bcf	3,5	;RP0=0, select bank0
   658  0017  1303               	bcf	3,6	;RP1=0, select bank0
   659  0018  139F               	bcf	31,7	;volatile
   660                           
   661                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   662  0019  131F               	bcf	31,6	;volatile
   663                           
   664                           ;ADC.c: 9:             break;
   665  001A  2896               	goto	l959
   666  001B                     l82:	
   667                           ;ADC.c: 10:         case 1:
   668                           
   669                           
   670                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   671  001B  1283               	bcf	3,5	;RP0=0, select bank0
   672  001C  1303               	bcf	3,6	;RP1=0, select bank0
   673  001D  139F               	bcf	31,7	;volatile
   674                           
   675                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   676  001E  171F               	bsf	31,6	;volatile
   677                           
   678                           ;ADC.c: 13:             break;
   679  001F  2896               	goto	l959
   680  0020                     l83:	
   681                           ;ADC.c: 14:         case 2:
   682                           
   683                           
   684                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   685  0020  1283               	bcf	3,5	;RP0=0, select bank0
   686  0021  1303               	bcf	3,6	;RP1=0, select bank0
   687  0022  179F               	bsf	31,7	;volatile
   688                           
   689                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   690  0023  131F               	bcf	31,6	;volatile
   691                           
   692                           ;ADC.c: 17:             break;
   693  0024  2896               	goto	l959
   694  0025                     l84:	
   695                           ;ADC.c: 18:         case 3:
   696                           
   697                           
   698                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   699  0025  1283               	bcf	3,5	;RP0=0, select bank0
   700  0026  1303               	bcf	3,6	;RP1=0, select bank0
   701  0027  179F               	bsf	31,7	;volatile
   702                           
   703                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   704  0028  171F               	bsf	31,6	;volatile
   705                           
   706                           ;ADC.c: 21:             break;
   707  0029  2896               	goto	l959
   708  002A                     l85:	
   709                           ;ADC.c: 22:         default:
   710                           
   711                           
   712                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   713  002A  1283               	bcf	3,5	;RP0=0, select bank0
   714  002B  1303               	bcf	3,6	;RP1=0, select bank0
   715  002C  139F               	bcf	31,7	;volatile
   716                           
   717                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   718  002D  171F               	bsf	31,6	;volatile
   719                           
   720                           ;ADC.c: 25:             break;
   721  002E  2896               	goto	l959
   722  002F                     l921:
   723  002F  0878               	movf	ADC_init@ADCSbit,w
   724  0030  00F6               	movwf	??_ADC_init
   725  0031  01F7               	clrf	??_ADC_init+1
   726                           
   727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   728                           ; Switch size 1, requested type "simple"
   729                           ; Number of cases is 1, Range of values is 0 to 0
   730                           ; switch strategies available:
   731                           ; Name         Instructions Cycles
   732                           ; simple_byte            4     3 (average)
   733                           ; direct_byte           11     8 (fixed)
   734                           ; jumptable            260     6 (fixed)
   735                           ;	Chosen strategy is simple_byte
   736  0032  0877               	movf	??_ADC_init+1,w
   737  0033  3A00               	xorlw	0	; case 0
   738  0034  1903               	skipnz
   739  0035  2837               	goto	l1079
   740  0036  282A               	goto	l85
   741  0037                     l1079:
   742                           
   743                           ; Switch size 1, requested type "simple"
   744                           ; Number of cases is 4, Range of values is 0 to 3
   745                           ; switch strategies available:
   746                           ; Name         Instructions Cycles
   747                           ; simple_byte           13     7 (average)
   748                           ; direct_byte           20     8 (fixed)
   749                           ; jumptable            260     6 (fixed)
   750                           ;	Chosen strategy is simple_byte
   751  0037  0876               	movf	??_ADC_init,w
   752  0038  3A00               	xorlw	0	; case 0
   753  0039  1903               	skipnz
   754  003A  2816               	goto	l80
   755  003B  3A01               	xorlw	1	; case 1
   756  003C  1903               	skipnz
   757  003D  281B               	goto	l82
   758  003E  3A03               	xorlw	3	; case 2
   759  003F  1903               	skipnz
   760  0040  2820               	goto	l83
   761  0041  3A01               	xorlw	1	; case 3
   762  0042  1903               	skipnz
   763  0043  2825               	goto	l84
   764  0044  282A               	goto	l85
   765  0045                     l923:
   766                           
   767                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   768  0045  30C3               	movlw	-61
   769  0046  059F               	andwf	31,f	;volatile
   770                           
   771                           ;ADC.c: 31:             break;
   772  0047  28DC               	goto	l963
   773  0048                     l925:
   774                           
   775                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
   776  0048  081F               	movf	31,w	;volatile
   777  0049  39C3               	andlw	-61
   778  004A  3804               	iorlw	4
   779  004B  009F               	movwf	31	;volatile
   780                           
   781                           ;ADC.c: 34:             break;
   782  004C  28DC               	goto	l963
   783  004D                     l927:
   784                           
   785                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
   786  004D  081F               	movf	31,w	;volatile
   787  004E  39C3               	andlw	-61
   788  004F  3808               	iorlw	8
   789  0050  009F               	movwf	31	;volatile
   790                           
   791                           ;ADC.c: 37:             break;
   792  0051  28DC               	goto	l963
   793  0052                     l929:
   794                           
   795                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
   796  0052  081F               	movf	31,w	;volatile
   797  0053  39C3               	andlw	-61
   798  0054  380C               	iorlw	12
   799  0055  009F               	movwf	31	;volatile
   800                           
   801                           ;ADC.c: 40:             break;
   802  0056  28DC               	goto	l963
   803  0057                     l931:
   804                           
   805                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
   806  0057  081F               	movf	31,w	;volatile
   807  0058  39C3               	andlw	-61
   808  0059  3810               	iorlw	16
   809  005A  009F               	movwf	31	;volatile
   810                           
   811                           ;ADC.c: 43:             break;
   812  005B  28DC               	goto	l963
   813  005C                     l933:
   814                           
   815                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
   816  005C  081F               	movf	31,w	;volatile
   817  005D  39C3               	andlw	-61
   818  005E  3814               	iorlw	20
   819  005F  009F               	movwf	31	;volatile
   820                           
   821                           ;ADC.c: 46:             break;
   822  0060  28DC               	goto	l963
   823  0061                     l935:
   824                           
   825                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
   826  0061  081F               	movf	31,w	;volatile
   827  0062  39C3               	andlw	-61
   828  0063  3818               	iorlw	24
   829  0064  009F               	movwf	31	;volatile
   830                           
   831                           ;ADC.c: 49:             break;
   832  0065  28DC               	goto	l963
   833  0066                     l937:
   834                           
   835                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
   836  0066  081F               	movf	31,w	;volatile
   837  0067  39C3               	andlw	-61
   838  0068  381C               	iorlw	28
   839  0069  009F               	movwf	31	;volatile
   840                           
   841                           ;ADC.c: 52:             break;
   842  006A  28DC               	goto	l963
   843  006B                     l939:
   844                           
   845                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
   846  006B  081F               	movf	31,w	;volatile
   847  006C  39C3               	andlw	-61
   848  006D  3820               	iorlw	32
   849  006E  009F               	movwf	31	;volatile
   850                           
   851                           ;ADC.c: 55:             break;
   852  006F  28DC               	goto	l963
   853  0070                     l941:
   854                           
   855                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
   856  0070  081F               	movf	31,w	;volatile
   857  0071  39C3               	andlw	-61
   858  0072  3824               	iorlw	36
   859  0073  009F               	movwf	31	;volatile
   860                           
   861                           ;ADC.c: 58:             break;
   862  0074  28DC               	goto	l963
   863  0075                     l943:
   864                           
   865                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
   866  0075  081F               	movf	31,w	;volatile
   867  0076  39C3               	andlw	-61
   868  0077  3828               	iorlw	40
   869  0078  009F               	movwf	31	;volatile
   870                           
   871                           ;ADC.c: 61:             break;
   872  0079  28DC               	goto	l963
   873  007A                     l945:
   874                           
   875                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
   876  007A  081F               	movf	31,w	;volatile
   877  007B  39C3               	andlw	-61
   878  007C  382C               	iorlw	44
   879  007D  009F               	movwf	31	;volatile
   880                           
   881                           ;ADC.c: 64:             break;
   882  007E  28DC               	goto	l963
   883  007F                     l947:
   884                           
   885                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
   886  007F  081F               	movf	31,w	;volatile
   887  0080  39C3               	andlw	-61
   888  0081  3830               	iorlw	48
   889  0082  009F               	movwf	31	;volatile
   890                           
   891                           ;ADC.c: 67:             break;
   892  0083  28DC               	goto	l963
   893  0084                     l949:
   894                           
   895                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
   896  0084  081F               	movf	31,w	;volatile
   897  0085  39C3               	andlw	-61
   898  0086  3834               	iorlw	52
   899  0087  009F               	movwf	31	;volatile
   900                           
   901                           ;ADC.c: 70:             break;
   902  0088  28DC               	goto	l963
   903  0089                     l951:
   904                           
   905                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
   906  0089  081F               	movf	31,w	;volatile
   907  008A  39C3               	andlw	-61
   908  008B  3838               	iorlw	56
   909  008C  009F               	movwf	31	;volatile
   910                           
   911                           ;ADC.c: 73:             break;
   912  008D  28DC               	goto	l963
   913  008E                     l953:
   914                           
   915                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
   916  008E  303C               	movlw	60
   917  008F  049F               	iorwf	31,f	;volatile
   918                           
   919                           ;ADC.c: 76:             break;
   920  0090  28DC               	goto	l963
   921  0091                     l955:
   922                           
   923                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
   924  0091  081F               	movf	31,w	;volatile
   925  0092  39C3               	andlw	-61
   926  0093  3808               	iorlw	8
   927  0094  009F               	movwf	31	;volatile
   928                           
   929                           ;ADC.c: 79:             break;
   930  0095  28DC               	goto	l963
   931  0096                     l959:
   932  0096  0873               	movf	ADC_init@Channel,w
   933  0097  00F6               	movwf	??_ADC_init
   934  0098  01F7               	clrf	??_ADC_init+1
   935                           
   936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   937                           ; Switch size 1, requested type "simple"
   938                           ; Number of cases is 1, Range of values is 0 to 0
   939                           ; switch strategies available:
   940                           ; Name         Instructions Cycles
   941                           ; simple_byte            4     3 (average)
   942                           ; direct_byte           11     8 (fixed)
   943                           ; jumptable            260     6 (fixed)
   944                           ;	Chosen strategy is simple_byte
   945  0099  0877               	movf	??_ADC_init+1,w
   946  009A  3A00               	xorlw	0	; case 0
   947  009B  1903               	skipnz
   948  009C  289E               	goto	l1081
   949  009D  2891               	goto	l955
   950  009E                     l1081:
   951                           
   952                           ; Switch size 1, requested type "simple"
   953                           ; Number of cases is 16, Range of values is 0 to 15
   954                           ; switch strategies available:
   955                           ; Name         Instructions Cycles
   956                           ; simple_byte           49    25 (average)
   957                           ; direct_byte           56     8 (fixed)
   958                           ; jumptable            260     6 (fixed)
   959                           ;	Chosen strategy is simple_byte
   960  009E  0876               	movf	??_ADC_init,w
   961  009F  3A00               	xorlw	0	; case 0
   962  00A0  1903               	skipnz
   963  00A1  2845               	goto	l923
   964  00A2  3A01               	xorlw	1	; case 1
   965  00A3  1903               	skipnz
   966  00A4  2848               	goto	l925
   967  00A5  3A03               	xorlw	3	; case 2
   968  00A6  1903               	skipnz
   969  00A7  284D               	goto	l927
   970  00A8  3A01               	xorlw	1	; case 3
   971  00A9  1903               	skipnz
   972  00AA  2852               	goto	l929
   973  00AB  3A07               	xorlw	7	; case 4
   974  00AC  1903               	skipnz
   975  00AD  2857               	goto	l931
   976  00AE  3A01               	xorlw	1	; case 5
   977  00AF  1903               	skipnz
   978  00B0  285C               	goto	l933
   979  00B1  3A03               	xorlw	3	; case 6
   980  00B2  1903               	skipnz
   981  00B3  2861               	goto	l935
   982  00B4  3A01               	xorlw	1	; case 7
   983  00B5  1903               	skipnz
   984  00B6  2866               	goto	l937
   985  00B7  3A0F               	xorlw	15	; case 8
   986  00B8  1903               	skipnz
   987  00B9  286B               	goto	l939
   988  00BA  3A01               	xorlw	1	; case 9
   989  00BB  1903               	skipnz
   990  00BC  2870               	goto	l941
   991  00BD  3A03               	xorlw	3	; case 10
   992  00BE  1903               	skipnz
   993  00BF  2875               	goto	l943
   994  00C0  3A01               	xorlw	1	; case 11
   995  00C1  1903               	skipnz
   996  00C2  287A               	goto	l945
   997  00C3  3A07               	xorlw	7	; case 12
   998  00C4  1903               	skipnz
   999  00C5  287F               	goto	l947
  1000  00C6  3A01               	xorlw	1	; case 13
  1001  00C7  1903               	skipnz
  1002  00C8  2884               	goto	l949
  1003  00C9  3A03               	xorlw	3	; case 14
  1004  00CA  1903               	skipnz
  1005  00CB  2889               	goto	l951
  1006  00CC  3A01               	xorlw	1	; case 15
  1007  00CD  1903               	skipnz
  1008  00CE  288E               	goto	l953
  1009  00CF  2891               	goto	l955
  1010  00D0                     l106:	
  1011                           ;ADC.c: 83:         case 0:
  1012                           
  1013                           
  1014                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1015  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1016  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1017  00D2  139F               	bcf	31,7	;volatile
  1018                           
  1019                           ;ADC.c: 85:             break;
  1020  00D3  28FB               	goto	l967
  1021  00D4                     l108:	
  1022                           ;ADC.c: 86:         case 1:
  1023                           
  1024                           
  1025                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1026  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1027  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1028  00D6  179F               	bsf	31,7	;volatile
  1029                           
  1030                           ;ADC.c: 88:             break;
  1031  00D7  28FB               	goto	l967
  1032  00D8                     l109:	
  1033                           ;ADC.c: 89:         default:
  1034                           
  1035                           
  1036                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1037  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1038  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1039  00DA  139F               	bcf	31,7	;volatile
  1040                           
  1041                           ;ADC.c: 91:             break;
  1042  00DB  28FB               	goto	l967
  1043  00DC                     l963:
  1044  00DC  0874               	movf	ADC_init@Justified,w
  1045  00DD  00F6               	movwf	??_ADC_init
  1046  00DE  01F7               	clrf	??_ADC_init+1
  1047                           
  1048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1049                           ; Switch size 1, requested type "simple"
  1050                           ; Number of cases is 1, Range of values is 0 to 0
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte            4     3 (average)
  1054                           ; direct_byte           11     8 (fixed)
  1055                           ; jumptable            260     6 (fixed)
  1056                           ;	Chosen strategy is simple_byte
  1057  00DF  0877               	movf	??_ADC_init+1,w
  1058  00E0  3A00               	xorlw	0	; case 0
  1059  00E1  1903               	skipnz
  1060  00E2  28E4               	goto	l1083
  1061  00E3  28D8               	goto	l109
  1062  00E4                     l1083:
  1063                           
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 2, Range of values is 0 to 1
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte            7     4 (average)
  1069                           ; direct_byte           14     8 (fixed)
  1070                           ; jumptable            260     6 (fixed)
  1071                           ;	Chosen strategy is simple_byte
  1072  00E4  0876               	movf	??_ADC_init,w
  1073  00E5  3A00               	xorlw	0	; case 0
  1074  00E6  1903               	skipnz
  1075  00E7  28D0               	goto	l106
  1076  00E8  3A01               	xorlw	1	; case 1
  1077  00E9  1903               	skipnz
  1078  00EA  28D4               	goto	l108
  1079  00EB  28D8               	goto	l109
  1080  00EC                     l111:	
  1081                           ;ADC.c: 95:         case 1:
  1082                           
  1083                           
  1084                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1085  00EC  129F               	bcf	31,5	;volatile
  1086                           
  1087                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1088  00ED  121F               	bcf	31,4	;volatile
  1089                           
  1090                           ;ADC.c: 98:             break;
  1091  00EE  2911               	goto	l112
  1092  00EF                     l113:	
  1093                           ;ADC.c: 99:         case 2:
  1094                           
  1095                           
  1096                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1097  00EF  129F               	bcf	31,5	;volatile
  1098                           
  1099                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1100  00F0  161F               	bsf	31,4	;volatile
  1101                           
  1102                           ;ADC.c: 102:             break;
  1103  00F1  2911               	goto	l112
  1104  00F2                     l114:	
  1105                           ;ADC.c: 103:         case 3:
  1106                           
  1107                           
  1108                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1109  00F2  169F               	bsf	31,5	;volatile
  1110                           
  1111                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1112  00F3  121F               	bcf	31,4	;volatile
  1113                           
  1114                           ;ADC.c: 106:             break;
  1115  00F4  2911               	goto	l112
  1116  00F5                     l115:	
  1117                           ;ADC.c: 107:         case 4:
  1118                           
  1119                           
  1120                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1121  00F5  169F               	bsf	31,5	;volatile
  1122                           
  1123                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1124  00F6  161F               	bsf	31,4	;volatile
  1125                           
  1126                           ;ADC.c: 110:             break;
  1127  00F7  2911               	goto	l112
  1128  00F8                     l116:	
  1129                           ;ADC.c: 111:         default:
  1130                           
  1131                           
  1132                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1133  00F8  129F               	bcf	31,5	;volatile
  1134                           
  1135                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1136  00F9  121F               	bcf	31,4	;volatile
  1137                           
  1138                           ;ADC.c: 114:             break;
  1139  00FA  2911               	goto	l112
  1140  00FB                     l967:
  1141  00FB  0875               	movf	ADC_init@Vref,w
  1142  00FC  00F6               	movwf	??_ADC_init
  1143  00FD  01F7               	clrf	??_ADC_init+1
  1144                           
  1145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1146                           ; Switch size 1, requested type "simple"
  1147                           ; Number of cases is 1, Range of values is 0 to 0
  1148                           ; switch strategies available:
  1149                           ; Name         Instructions Cycles
  1150                           ; simple_byte            4     3 (average)
  1151                           ; direct_byte           11     8 (fixed)
  1152                           ; jumptable            260     6 (fixed)
  1153                           ;	Chosen strategy is simple_byte
  1154  00FE  0877               	movf	??_ADC_init+1,w
  1155  00FF  3A00               	xorlw	0	; case 0
  1156  0100  1903               	skipnz
  1157  0101  2903               	goto	l1085
  1158  0102  28F8               	goto	l116
  1159  0103                     l1085:
  1160                           
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 4, Range of values is 1 to 4
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte           13     7 (average)
  1166                           ; direct_byte           23    11 (fixed)
  1167                           ; jumptable            263     9 (fixed)
  1168                           ;	Chosen strategy is simple_byte
  1169  0103  0876               	movf	??_ADC_init,w
  1170  0104  3A01               	xorlw	1	; case 1
  1171  0105  1903               	skipnz
  1172  0106  28EC               	goto	l111
  1173  0107  3A03               	xorlw	3	; case 2
  1174  0108  1903               	skipnz
  1175  0109  28EF               	goto	l113
  1176  010A  3A01               	xorlw	1	; case 3
  1177  010B  1903               	skipnz
  1178  010C  28F2               	goto	l114
  1179  010D  3A07               	xorlw	7	; case 4
  1180  010E  1903               	skipnz
  1181  010F  28F5               	goto	l115
  1182  0110  28F8               	goto	l116
  1183  0111                     l112:
  1184                           
  1185                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1186  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0113  130C               	bcf	12,6	;volatile
  1189                           
  1190                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1191  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0116  170C               	bsf	12,6	;volatile
  1194                           
  1195                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1196  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0119  141F               	bsf	31,0	;volatile
  1199  011A                     l117:
  1200  011A  0008               	return
  1201  011B                     __end_of_ADC_init:
  1202                           
  1203                           	psect	text3
  1204  0143                     __ptext3:	
  1205 ;; *************** function _isr *****************
  1206 ;; Defined at:
  1207 ;;		line 113 in file "main2.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          3       0       0       0       0
  1224 ;;      Totals:         3       0       0       0       0
  1225 ;;Total ram usage:        3 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		Interrupt level 1
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _isr
  1236  0143                     _isr:
  1237  0143                     i1l819:
  1238                           
  1239                           ;main2.c: 114:     if (INTCONbits.RBIF == 1) {
  1240  0143  1C0B               	btfss	11,0	;volatile
  1241  0144  2946               	goto	u2_21
  1242  0145  2947               	goto	u2_20
  1243  0146                     u2_21:
  1244  0146  2959               	goto	i1l829
  1245  0147                     u2_20:
  1246  0147                     i1l821:
  1247                           
  1248                           ;main2.c: 115:         if (PORTBbits.RB0 == 1) {
  1249  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0149  1C06               	btfss	6,0	;volatile
  1252  014A  294C               	goto	u3_21
  1253  014B  294D               	goto	u3_20
  1254  014C                     u3_21:
  1255  014C  2950               	goto	i1l64
  1256  014D                     u3_20:
  1257  014D                     i1l823:
  1258                           
  1259                           ;main2.c: 116:             PORTD--;
  1260  014D  3001               	movlw	1
  1261  014E  0288               	subwf	8,f	;volatile
  1262                           
  1263                           ;main2.c: 117:         } else if (PORTBbits.RB1 == 1) {
  1264  014F  2958               	goto	i1l827
  1265  0150                     i1l64:
  1266  0150  1C86               	btfss	6,1	;volatile
  1267  0151  2953               	goto	u4_21
  1268  0152  2954               	goto	u4_20
  1269  0153                     u4_21:
  1270  0153  2958               	goto	i1l827
  1271  0154                     u4_20:
  1272  0154                     i1l825:
  1273                           
  1274                           ;main2.c: 118:             PORTD++;
  1275  0154  3001               	movlw	1
  1276  0155  00F0               	movwf	??_isr
  1277  0156  0870               	movf	??_isr,w
  1278  0157  0788               	addwf	8,f	;volatile
  1279  0158                     i1l827:
  1280                           
  1281                           ;main2.c: 120:         INTCONbits.RBIF = 0;
  1282  0158  100B               	bcf	11,0	;volatile
  1283  0159                     i1l829:
  1284                           
  1285                           ;main2.c: 122:     if(PIR1bits.ADIF == 1){
  1286  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1287  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1288  015B  1F0C               	btfss	12,6	;volatile
  1289  015C  295E               	goto	u5_21
  1290  015D  295F               	goto	u5_20
  1291  015E                     u5_21:
  1292  015E  2964               	goto	i1l68
  1293  015F                     u5_20:
  1294  015F                     i1l831:
  1295                           
  1296                           ;main2.c: 123:         PORTC = ADRESH;
  1297  015F  081E               	movf	30,w	;volatile
  1298  0160  0087               	movwf	7	;volatile
  1299  0161                     i1l833:
  1300                           
  1301                           ;main2.c: 124:         ADC_cflag = 1;
  1302  0161  01FA               	clrf	_ADC_cflag
  1303  0162  0AFA               	incf	_ADC_cflag,f
  1304  0163                     i1l835:
  1305                           
  1306                           ;main2.c: 125:         PIR1bits.ADIF = 0;
  1307  0163  130C               	bcf	12,6	;volatile
  1308  0164                     i1l68:
  1309  0164  0872               	movf	??_isr+2,w
  1310  0165  008A               	movwf	10
  1311  0166  0E71               	swapf	??_isr+1,w
  1312  0167  0083               	movwf	3
  1313  0168  0EFE               	swapf	btemp,f
  1314  0169  0E7E               	swapf	btemp,w
  1315  016A  0009               	retfie
  1316  016B                     __end_of_isr:
  1317  007E                     btemp	set	126	;btemp
  1318  007E                     wtemp0	set	126
  1319                           
  1320                           	psect	intentry
  1321  0004                     __pintentry:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _isr: [wreg+status,2+status,0]
  1324                           
  1325  0004                     interrupt_function:
  1326  007E                     saved_w	set	btemp
  1327  0004  00FE               	movwf	btemp
  1328  0005  0E03               	swapf	3,w
  1329  0006  00F1               	movwf	??_isr+1
  1330  0007  080A               	movf	10,w
  1331  0008  00F2               	movwf	??_isr+2
  1332  0009  120A  118A  2943   	ljmp	_isr
  1333                           
  1334                           	psect	config
  1335                           
  1336                           ;Config register CONFIG1 @ 0x2007
  1337                           ;	Oscillator Selection bits
  1338                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1339                           ;	Watchdog Timer Enable bit
  1340                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1341                           ;	Power-up Timer Enable bit
  1342                           ;	PWRTE = OFF, PWRT disabled
  1343                           ;	RE3/MCLR pin function select bit
  1344                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1345                           ;	Code Protection bit
  1346                           ;	CP = OFF, Program memory code protection is disabled
  1347                           ;	Data Code Protection bit
  1348                           ;	CPD = OFF, Data memory code protection is disabled
  1349                           ;	Brown Out Reset Selection bits
  1350                           ;	BOREN = ON, BOR enabled
  1351                           ;	Internal External Switchover bit
  1352                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1353                           ;	Fail-Safe Clock Monitor Enabled bit
  1354                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1355                           ;	Low Voltage Programming Enable bit
  1356                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1357                           ;	In-Circuit Debugger Mode bit
  1358                           ;	DEBUG = 0x1, unprogrammed default
  1359  2007                     	org	8199
  1360  2007  23F4               	dw	9204
  1361                           
  1362                           ;Config register CONFIG2 @ 0x2008
  1363                           ;	Brown-out Reset Selection bit
  1364                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1365                           ;	Flash Program Memory Self Write Enable bits
  1366                           ;	WRT = OFF, Write protection off
  1367  2008                     	org	8200
  1368  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              9 COMMON     1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 01:44:21 2021

                     l80 0016                       l82 001B                       l58 0191  
                     l83 0020                       l84 0025                       l85 002A  
                     u60 0134                       u61 0133                       u77 0136  
                    l111 00EC                      l112 0111                      l113 00EF  
                    l114 00F2                      l106 00D0                      l115 00F5  
                    l116 00F8                      l108 00D4                      l117 011A  
                    l109 00D8                      l711 016F                      l721 0183  
                    l713 0170                      l731 0188                      l723 0184  
                    l715 0177                      l733 018B                      l725 0185  
                    l717 017F                      l709 016B                      l735 018E  
                    l727 0186                      l719 0182                      l921 002F  
                    l729 0187                      l931 0057                      l923 0045  
                    l941 0070                      l933 005C                      l925 0048  
                    l917 0015                      l951 0089                      l943 0075  
                    l935 0061                      l927 004D                      l953 008E  
                    l945 007A                      l937 0066                      l929 0052  
                    l955 0091                      l947 007F                      l939 006B  
                    l963 00DC                      l949 0084                      l967 00FB  
                    l959 0096                      l991 012F                      l993 0134  
                    l985 011B                      l995 013B                      l987 0120  
                    l997 013C                      l989 012D                      _isr 0143  
                   l1081 009E                     l1083 00E4                     l1085 0103  
                   l1079 0037                     ?_isr 0070                     i1l64 0150  
                   i1l68 0164                     _TMR0 0001                     u2_20 0147  
                   u2_21 0146                     u3_20 014D                     u3_21 014C  
                   u4_20 0154                     u4_21 0153                     u5_20 015F  
                   u5_21 015E                     _main 011B        ADC_init@Justified 0074  
                   btemp 007E                     start 000C         __end_of_ADC_init 011B  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l821 0147                    i1l831 015F                    i1l823 014D  
                  i1l833 0161                    i1l825 0154                    i1l835 0163  
                  i1l827 0158                    i1l819 0143                    i1l829 0159  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 016B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0143  
                 ??_main 0079                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189          ADC_init@ADCSbit 0078                   saved_w 007E  
              ?_ADC_init 0073          ADC_init@Channel 0073  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 0192               ??_ADC_init 0076  
                ??_setup 0073               __pmaintext 011B               __pintentry 0004  
              _ADC_cflag 007A                _ANSELbits 0188                  __ptext1 016B  
                __ptext2 0014                  __ptext3 0143             __size_of_isr 0028  
   end_of_initialization 0010                _PORTBbits 0006                _TRISAbits 0085  
              _TRISBbits 0086        __size_of_ADC_init 0107             ADC_init@Vref 0075  
    start_initialization 000F              __end_of_isr 016B              __pbssCOMMON 007A  
              ___latbits 0002                 _ADC_init 0014           __size_of_setup 0027  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 0028               _INTCONbits 000B                 intlevel1 0000  
